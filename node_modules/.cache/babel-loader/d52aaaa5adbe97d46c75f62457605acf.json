{"ast":null,"code":"var _jsxFileName = \"C:\\\\Particular\\\\Projetos\\\\appbanconuvem\\\\src\\\\components\\\\crud\\\\index.js\";\nimport React from 'react';\nimport StartFirebase from '../firebaseConfig/index';\nimport { ref, set, get, update, remove, child } from 'firebase/database';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Crud extends React.Component {\n  constructor(props) {\n    super(props);\n    this.date = {\n      db: '',\n      username: '',\n      fullname: '',\n      phonenumber: '',\n      dob: ''\n    };\n    this.interface = this.interface.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      db: StartFirebase()\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  /*render() {\r\n    return (\r\n      <>\r\n        <label>Enter Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userbox\"\r\n          value={this.state.username}\r\n          onChange={e => {\r\n            this.setState({ username: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n          <label>Enter Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userbox\"\r\n          value={this.state.username}\r\n          onChange={e => {\r\n            this.setState({ username: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n          <label>Enter Full Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"namebox\"\r\n          value={this.state.fullname}\r\n          onChange={e => {\r\n            this.setState({ fullname: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n          <label>Enter Phone Number</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"phonebox\"\r\n          value={this.state.phonenumber}\r\n          onChange={e => {\r\n            this.setState({ phonenumber: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n          <label>Chose Date of Birth</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"datebox\"\r\n          value={this.state.dob}\r\n          onChange={e => {\r\n            this.setState({ dob: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n          <button id=\"addBtn\" onClick={this.interface}>\r\n          Add Data\r\n        </button>\r\n        <button id=\"updateBtn\" onClick={this.interface}>\r\n          Update Data\r\n        </button>\r\n        <button id=\"deleteBtn\" onClick={this.interface}>\r\n          Delete Data\r\n        </button>\r\n        <button id=\"selectBtn\" onClick={this.interface}>\r\n          Get Data from DB\r\n        </button>\r\n      </>\r\n    )\r\n  }*/\n\n\n  interface(event) {\n    const id = event.target.id;\n\n    if (id == 'addBtn') {\n      this.insertData();\n    } else if (id == 'updateBtn') {\n      this.updateData();\n    } else if (id == 'deleteBtn') {\n      this.deleteData();\n    } else if (id == 'selectBtn') {\n      this.selectData();\n    }\n  }\n\n  getAllInputs() {\n    return {\n      username: this.state.username,\n      name: this.state.fullname,\n      phone: Number(this.state.phonenumber),\n      dob: this.state.dob\n    };\n  }\n\n  insertData() {\n    const db = this.state.db;\n    const data = this.getAllInputs();\n    set(ref(db, 'Customer/' + data.username), {\n      Fullname: data.name,\n      Phonenumber: data.phone,\n      dateofbirth: data.dob\n    }).then(() => {\n      alert('data was added successfully');\n    }).catch(error => {\n      alert('there was an error, details: ' + error);\n    });\n  }\n\n  updateData() {\n    const db = this.state.db;\n    const data = this.getAllInputs();\n    update(ref(db, 'Customer/' + data.username), {\n      Fullname: data.name,\n      Phonenumber: data.phone,\n      dateofbirth: data.dob\n    }).then(() => {\n      alert('data was updated successfully');\n    }).catch(error => {\n      alert('there was an error, details: ' + error);\n    });\n  }\n\n  deleteData() {\n    const db = this.state.db;\n    const username = this.getAllInputs().username;\n    remove(ref(db, 'Customer/' + username)).then(() => {\n      alert('data was deleted successfully');\n    }).catch(error => {\n      alert('there was an error, details: ' + error);\n    });\n  }\n\n  selectData() {\n    const dbref = ref(this.state.db);\n    const username = this.getAllInputs().username;\n    get(child(dbref, 'Customer/' + username)).then(snapshot => {\n      if (snapshot.exists()) {\n        this.setState({\n          fullname: snapshot.val().Fullname,\n          phonenumber: snapshot.val().Phonenumber,\n          dob: snapshot.val().dateofbirth\n        });\n      } else {\n        alert('No data found!');\n      }\n    }).catch(error => {\n      alert('there was an error, details: ' + error);\n    });\n  }\n\n}","map":{"version":3,"names":["React","StartFirebase","ref","set","get","update","remove","child","Crud","Component","constructor","props","date","db","username","fullname","phonenumber","dob","interface","bind","componentDidMount","setState","render","event","id","target","insertData","updateData","deleteData","selectData","getAllInputs","state","name","phone","Number","data","Fullname","Phonenumber","dateofbirth","then","alert","catch","error","dbref","snapshot","exists","val"],"sources":["C:/Particular/Projetos/appbanconuvem/src/components/crud/index.js"],"sourcesContent":["import React from 'react'\r\nimport StartFirebase from '../firebaseConfig/index'\r\nimport { ref, set, get, update, remove, child } from 'firebase/database'\r\nimport './index.css'\r\n\r\nexport class Crud extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.date = {\r\n      db: '',\r\n      username: '',\r\n      fullname: '',\r\n      phonenumber: '',\r\n      dob: ''\r\n    }\r\n    this.interface = this.interface.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      db: StartFirebase()\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <label>Username</label>\r\n        <input type=\"text\" />\r\n      </>\r\n    )\r\n  }\r\n  /*render() {\r\n    return (\r\n      <>\r\n        <label>Enter Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userbox\"\r\n          value={this.state.username}\r\n          onChange={e => {\r\n            this.setState({ username: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <label>Enter Username</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"userbox\"\r\n          value={this.state.username}\r\n          onChange={e => {\r\n            this.setState({ username: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <label>Enter Full Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"namebox\"\r\n          value={this.state.fullname}\r\n          onChange={e => {\r\n            this.setState({ fullname: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <label>Enter Phone Number</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"phonebox\"\r\n          value={this.state.phonenumber}\r\n          onChange={e => {\r\n            this.setState({ phonenumber: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <label>Chose Date of Birth</label>\r\n        <input\r\n          type=\"date\"\r\n          id=\"datebox\"\r\n          value={this.state.dob}\r\n          onChange={e => {\r\n            this.setState({ dob: e.target.value })\r\n          }}\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        <button id=\"addBtn\" onClick={this.interface}>\r\n          Add Data\r\n        </button>\r\n        <button id=\"updateBtn\" onClick={this.interface}>\r\n          Update Data\r\n        </button>\r\n        <button id=\"deleteBtn\" onClick={this.interface}>\r\n          Delete Data\r\n        </button>\r\n        <button id=\"selectBtn\" onClick={this.interface}>\r\n          Get Data from DB\r\n        </button>\r\n      </>\r\n    )\r\n  }*/\r\n\r\n  interface(event) {\r\n    const id = event.target.id\r\n\r\n    if (id == 'addBtn') {\r\n      this.insertData()\r\n    } else if (id == 'updateBtn') {\r\n      this.updateData()\r\n    } else if (id == 'deleteBtn') {\r\n      this.deleteData()\r\n    } else if (id == 'selectBtn') {\r\n      this.selectData()\r\n    }\r\n  }\r\n\r\n  getAllInputs() {\r\n    return {\r\n      username: this.state.username,\r\n      name: this.state.fullname,\r\n      phone: Number(this.state.phonenumber),\r\n      dob: this.state.dob\r\n    }\r\n  }\r\n  insertData() {\r\n    const db = this.state.db\r\n    const data = this.getAllInputs()\r\n\r\n    set(ref(db, 'Customer/' + data.username), {\r\n      Fullname: data.name,\r\n      Phonenumber: data.phone,\r\n      dateofbirth: data.dob\r\n    })\r\n      .then(() => {\r\n        alert('data was added successfully')\r\n      })\r\n      .catch(error => {\r\n        alert('there was an error, details: ' + error)\r\n      })\r\n  }\r\n\r\n  updateData() {\r\n    const db = this.state.db\r\n    const data = this.getAllInputs()\r\n\r\n    update(ref(db, 'Customer/' + data.username), {\r\n      Fullname: data.name,\r\n      Phonenumber: data.phone,\r\n      dateofbirth: data.dob\r\n    })\r\n      .then(() => {\r\n        alert('data was updated successfully')\r\n      })\r\n      .catch(error => {\r\n        alert('there was an error, details: ' + error)\r\n      })\r\n  }\r\n\r\n  deleteData() {\r\n    const db = this.state.db\r\n    const username = this.getAllInputs().username\r\n\r\n    remove(ref(db, 'Customer/' + username))\r\n      .then(() => {\r\n        alert('data was deleted successfully')\r\n      })\r\n      .catch(error => {\r\n        alert('there was an error, details: ' + error)\r\n      })\r\n  }\r\n\r\n  selectData() {\r\n    const dbref = ref(this.state.db)\r\n    const username = this.getAllInputs().username\r\n\r\n    get(child(dbref, 'Customer/' + username))\r\n      .then(snapshot => {\r\n        if (snapshot.exists()) {\r\n          this.setState({\r\n            fullname: snapshot.val().Fullname,\r\n            phonenumber: snapshot.val().Phonenumber,\r\n            dob: snapshot.val().dateofbirth\r\n          })\r\n        } else {\r\n          alert('No data found!')\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert('there was an error, details: ' + error)\r\n      })\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}